class Solution {
public:
    int largestRectangleArea(vector<int>& arr) {
        vector<int>left,right;
        stack<pair<int,int>>s;
        int pseudo=-1;
        for(int i=0;i<arr.size();i++){
            if(s.size()==0)left.pb(pseudo);
            else if(s.size()>0 && s.top().first<arr[i]){
                left.pb(s.top().second);
            }
            else if(s.size()>0 && s.top().first>=arr[i]){
                while(s.size()>0 && s.top().first>=arr[i]){
                    s.pop();}
                    if(s.size()==0)left.pb(-1);
                    else left.pb(s.top().second);
                
                
            }
            s.push({arr[i],i});
        }
        stack<pair<int,int>>s2;
        pseudo=arr.size();
         for(int i=pseudo-1;i>=0;i--){
            if(s2.size()==0)right.pb(pseudo);
            else if(s2.size()>0 && s2.top().first<arr[i]){
                right.pb(s2.top().second);
            }
            else if(s2.size()>0 && s2.top().first>=arr[i]){
                while(s2.size()>0 && s2.top().first>=arr[i]){
                    s2.pop();
                }
                    if(s2.size()==0)right.pb(pseudo);
                    else right.pb(s2.top().second);
            }
            s2.push({arr[i],i});
        }
        reverse(all(right));
        int maxi=0;
        for(int i=0;i<arr.size();i++){
            arr[i]=arr[i]*(right[i]-left[i]-1);
            maxi=max(maxi,arr[i]);
        }
        return maxi;
    }
};
